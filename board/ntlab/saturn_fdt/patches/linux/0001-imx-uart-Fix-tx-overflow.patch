From bb720c2653e63b7b021b4b7bd5ee74c3ac24da3e Mon Sep 17 00:00:00 2001
From: Andrey Mihadyuk <mihadyuk@ntlab.com>
Date: Tue, 4 Oct 2016 14:11:04 +0300
Subject: [PATCH 1/2] imx uart: Fix tx overflow.

---
 drivers/tty/serial/imx.c | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 01aa52f..fa08a09 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -454,13 +454,15 @@ static inline void imx_transmit_buffer(struct imx_port *sport)
 		}
 	}
 
-	while (!uart_circ_empty(xmit) &&
-	       !(readl(sport->port.membase + uts_reg(sport)) & UTS_TXFULL)) {
-		/* send xmit->buf[xmit->tail]
-		 * out the port here */
-		writel(xmit->buf[xmit->tail], sport->port.membase + URTX0);
-		xmit->tail = (xmit->tail + 1) & (UART_XMIT_SIZE - 1);
-		sport->port.icount.tx++;
+	if (!sport->dma_is_enabled) {
+		while (!uart_circ_empty(xmit) &&
+			   !(readl(sport->port.membase + uts_reg(sport)) & UTS_TXFULL)) {
+			/* send xmit->buf[xmit->tail]
+			 * out the port here */
+			writel(xmit->buf[xmit->tail], sport->port.membase + URTX0);
+			xmit->tail = (xmit->tail + 1) & (UART_XMIT_SIZE - 1);
+			sport->port.icount.tx++;
+		}
 	}
 
 	if (uart_circ_chars_pending(xmit) < WAKEUP_CHARS)
@@ -487,7 +489,8 @@ static void dma_tx_callback(void *data)
 	writel(temp, sport->port.membase + UCR1);
 
 	/* update the stat */
-	xmit->tail = (xmit->tail + sport->tx_bytes) & (UART_XMIT_SIZE - 1);
+	if (!uart_circ_empty(xmit))
+		xmit->tail = (xmit->tail + sport->tx_bytes) & (UART_XMIT_SIZE - 1);
 	sport->port.icount.tx += sport->tx_bytes;
 
 	dev_dbg(sport->port.dev, "we finish the TX DMA.\n");
-- 
2.10.0

